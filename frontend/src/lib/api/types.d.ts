/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/servers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all servers and their information */
        get: operations["ServersController_getServers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/servers/{id}/hardware": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get hardware server information by its ID */
        get: operations["ServersController_getServerHardwareInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/servers/{id}/log": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get server log */
        get: operations["ServersController_getServerLog"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/servers/{serverId}/button/{buttonId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Set server button state */
        patch: operations["ServersController_setButton"];
        trace?: never;
    };
    "/api/servers/{serverId}/toggle/{toggleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Set server toggle state */
        patch: operations["ServersController_setToggle"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ServerInfoDTO: {
            id: string;
            name: string;
            description: string;
            /** @enum {string} */
            status: "unavailable" | "powered" | "not-powered";
        };
        ErrorApiResponse: {
            statusCode: number;
            message: string;
        };
        HardwareOptionInfoDTO: {
            id: string;
            color: string;
            /** @enum {string} */
            icon: "power" | "reset";
            state?: boolean;
        };
        ServerHardwareInfoDTO: {
            id: string;
            name: string;
            description: string;
            /** @enum {string} */
            status: "unavailable" | "powered" | "not-powered";
            leds: components["schemas"]["HardwareOptionInfoDTO"][];
            buttons: components["schemas"]["HardwareOptionInfoDTO"][];
            toggles: components["schemas"]["HardwareOptionInfoDTO"][];
        };
        ChangeStateDTO: {
            state: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    ServersController_getServers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerInfoDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ServersController_getServerHardwareInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerHardwareInfoDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ServersController_getServerLog: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ServersController_setButton: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
                buttonId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangeStateDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ServersController_setToggle: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
                toggleId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangeStateDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
}
